--- asterisk-1.6-orig/res/ael/ael_lex.c	2009-10-19 18:26:07.000000000 -0400
+++ asterisk-1.6/res/ael/ael_lex.c	2009-10-19 18:37:54.000000000 -0400
@@ -1962,7 +1962,7 @@
 		   snprintf(fnamebuf2,sizeof(fnamebuf2), "%s/%s", (char *)ast_config_AST_CONFIG_DIR, fnamebuf);
 		   ast_copy_string(fnamebuf,fnamebuf2,sizeof(fnamebuf));
 		}
-#ifdef SOLARIS
+#if defined(SOLARIS) || defined(__BLACKFIN__)
 			glob_ret = glob(fnamebuf, GLOB_NOCHECK, NULL, &globbuf);
 #else
 			glob_ret = glob(fnamebuf, GLOB_NOMAGIC|GLOB_BRACE, NULL, &globbuf);


--- asterisk-1.6-orig/configure	2009-10-19 18:26:11.000000000 -0400
+++ asterisk-1.6/configure	2009-10-19 19:36:16.000000000 -0400
@@ -14064,7 +14064,7 @@
 fi
 if test "x$ac_cv_func_fork_works" = xcross; then
   case $host in
-    *-*-amigaos* | *-*-msdosdjgpp* | *-*-uclinux* | *-*-linux-uclibc* )
+    *-*-amigaos* | *-*-msdosdjgpp* | *-*-uclinux* | *-*-linux-uclibc* | bfin-*-* )
       # Override, as these systems have only a dummy fork() stub
       ac_cv_func_fork_works=no
       ;;


--- asterisk-1.6-orig/main/app.c	2009-10-19 18:26:05.000000000 -0400
+++ asterisk-1.6/main/app.c	2009-10-21 15:54:45.000000000 -0400
@@ -2041,7 +2041,11 @@
 	sigfillset(&signal_set);
 	pthread_sigmask(SIG_BLOCK, &signal_set, &old_set);
 
+#ifdef HAVE_WORKING_FORK
 	pid = fork();
+#else
+	pid = vfork();
+#endif
 
 	if (pid != 0) {
 		/* Fork failed or parent */
--- asterisk-1.6-orig/main/asterisk.c	2009-10-19 18:26:05.000000000 -0400
+++ asterisk-1.6/main/asterisk.c	2009-10-21 15:57:13.000000000 -0400
@@ -3495,8 +3495,12 @@
 
 		/* Don't let the canary child kill Asterisk, if it dies immediately */
 		signal(SIGPIPE, SIG_IGN);
-
+#ifdef HAVE_WORKING_FORK
 		canary_pid = fork();
+#else
+		canary_pid = vfork();
+#endif
+
 		if (canary_pid == 0) {
 			char canary_binary[128], *lastslash;
 
--- asterisk-1.6-orig/main/cli.c	2009-10-19 18:26:05.000000000 -0400
+++ asterisk-1.6/main/cli.c	2009-10-21 16:19:32.000000000 -0400
@@ -406,8 +406,14 @@
 			} else if (a->n == (22 - numbermatch) && a->pos == 3 && ast_strlen_zero(argv3)) {
 				return ast_strdup("atleast");
 			}
-		} else if (a->pos == 4 || (a->pos == 5 && !strcasecmp(argv3, "atleast"))) {
+		}
+#if !defined(LOW_MEMORY)
+		else if (a->pos == 4 || (a->pos == 5 && !strcasecmp(argv3, "atleast"))) {
 			return ast_complete_source_filename(a->pos == 4 ? S_OR(a->argv[4], "") : S_OR(a->argv[5], ""), a->n);
+#else
+			else if (a->pos == 4 || (a->pos == 5 && !strcasecmp(argv3, "atleast"))) {
+						return "Invalid Option when compiled with LOW_MEMORY switch";
+#endif
 		}
 		return NULL;
 	}
